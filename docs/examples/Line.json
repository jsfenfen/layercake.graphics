{"main":{"title":"main.js","contents":"import LayerCake from 'layercake';\nimport points from './data/points.js';\nimport Line from './components/Line.html';\nimport Area from './components/Area.html';\nimport AxisX from './components/AxisX.html';\nimport AxisY from './components/AxisY.html';\n\nconst myCake = new LayerCake({\n  padding: { right: 10, bottom: 20, left: 25 },\n  x: 'myX',\n  y: d => d['myY'],\n  yDomain: [0, null],\n  data: points,\n  target: document.getElementById('my-chart')\n})\n  .svgLayers([\n    { component: AxisX, opts: {} },\n    { component: AxisY, opts: {} },\n    { component: Line, opts: {} },\n    { component: Area, opts: {} }\n  ]);\n\nmyCake.render();"},"htmlExtras":"","components":[{"title":"./components/Line.html","contents":"<path class='path-line' d='{path}' style=\"stroke: {opts.stroke || '#ab00d6'};\"></path>\n<style>\n  .path-line {\n    fill: none;\n    stroke-linejoin: round;\n    stroke-linecap: round;\n    stroke-width: 2;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    path: ({ $data, $xGet, $yGet }) => {\n      return 'M' + $data\n        .map((d, i) => {\n          return $xGet(d) + ',' + $yGet(d);\n        })\n        .join('L');\n    }\n  }\n};\n</script>"},{"title":"./components/Area.html","contents":"<path class='path-area' d='{area}'></path>\n<style>\n  .path-area {\n    fill: #ab00d610;\n  }\n</style>\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    area: ({ $xScale, $domains, $yScale, path }) => {\n      const yRange = $yScale.range();\n      return path + (\n        'L' + $xScale($domains.x[1]) + ',' + yRange[0] +\n        'L' + $xScale($domains.x[0]) + ',' + yRange[0] +\n        'Z'\n      );\n    },\n    path: ({ $data, $xGet, $yGet }) => {\n      return 'M' + $data\n        .map(function (d, i) {\n          return $xGet(d) + ',' + $yGet(d);\n        })\n        .join('L');\n    }\n  }\n};\n</script>"},{"title":"./components/AxisX.html","contents":"<g class='axis x-axis'>\n  {#each ticks as tick, i}\n    <g class='tick tick-{ tick }' transform='translate({$xScale(tick)},{$yScale.range()[0]})'>\n      {#if opts.gridlines !== false}\n        <line y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n      {/if}\n      <text y='16' text-anchor='{textAnchor(i)}'>{opts.formatTick ? opts.formatTick(tick) : tick}</text>\n    </g>\n  {/each}\n  {#if opts.baseline === true}\n    <line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n  {/if}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  line,\n  .tick line {\n    stroke: #aaa;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #666;\n  }\n\n  .baseline {\n    stroke-dasharray: 0;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    ticks: ({ $xScale, opts }) => {\n      return $xScale.ticks(opts.tickNumber);\n    },\n    textAnchor: ({ ticks, opts }) => {\n      return function (i) {\n        if (opts.snapTicks === true) {\n          if (i === 0) {\n            return 'start';\n          }\n          if (i === ticks.length - 1) {\n            return 'end';\n          }\n        }\n        return 'middle';\n      };\n    }\n  }\n};\n</script>"},{"title":"./components/AxisY.html","contents":"<g class='axis y-axis' transform='translate(-{$padding.left}, 0)'>\n  {#each $yScale.ticks(opts.tickNumber || 5) as tick, i}\n    <g class='tick tick-{tick}' transform='translate(0, {$yScale(tick)})'>\n      {#if opts.gridlines !== false}\n        <line x2='100%'></line>\n      {/if}\n      <text y='-4'>{opts.formatTick ? opts.formatTick(tick) : tick}</text>\n    </g>\n  {/each}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #aaa;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #666;\n    text-anchor: start;\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg'\n};\n</script>"}],"modules":[{"title":"./data/points.js","contents":"export default [\n  {\n    myX: 1979,\n    myY: 7.19\n  },\n  {\n    myX: 1980,\n    myY: 7.83\n  },\n  {\n    myX: 1981,\n    myY: 7.24\n  },\n  {\n    myX: 1982,\n    myY: 7.44\n  },\n  {\n    myX: 1983,\n    myY: 7.51\n  },\n  {\n    myX: 1984,\n    myY: 7.1\n  },\n  {\n    myX: 1985,\n    myY: 6.91\n  },\n  {\n    myX: 1986,\n    myY: 7.53\n  },\n  {\n    myX: 1987,\n    myY: 7.47\n  },\n  {\n    myX: 1988,\n    myY: 7.48\n  },\n  {\n    myX: 1989,\n    myY: 7.03\n  },\n  {\n    myX: 1990,\n    myY: 6.23\n  },\n  {\n    myX: 1991,\n    myY: 6.54\n  },\n  {\n    myX: 1992,\n    myY: 7.54\n  },\n  {\n    myX: 1993,\n    myY: 6.5\n  },\n  {\n    myX: 1994,\n    myY: 7.18\n  },\n  {\n    myX: 1995,\n    myY: 6.12\n  },\n  {\n    myX: 1996,\n    myY: 7.87\n  },\n  {\n    myX: 1997,\n    myY: 6.73\n  },\n  {\n    myX: 1998,\n    myY: 6.55\n  },\n  {\n    myX: 1999,\n    myY: 6.23\n  },\n  {\n    myX: 2000,\n    myY: 6.31\n  },\n  {\n    myX: 2001,\n    myY: 6.74\n  },\n  {\n    myX: 2002,\n    myY: 5.95\n  },\n  {\n    myX: 2003,\n    myY: 6.13\n  },\n  {\n    myX: 2004,\n    myY: 6.04\n  },\n  {\n    myX: 2005,\n    myY: 5.56\n  },\n  {\n    myX: 2006,\n    myY: 5.91\n  },\n  {\n    myX: 2007,\n    myY: 4.29\n  },\n  {\n    myX: 2008,\n    myY: 4.72\n  },\n  {\n    myX: 2009,\n    myY: 5.38\n  },\n  {\n    myX: 2010,\n    myY: 4.92\n  },\n  {\n    myX: 2011,\n    myY: 4.61\n  },\n  {\n    myX: 2012,\n    myY: 3.62\n  },\n  {\n    myX: 2013,\n    myY: 5.35\n  },\n  {\n    myX: 2014,\n    myY: 5.28\n  },\n  {\n    myX: 2015,\n    myY: 4.63\n  },\n  {\n    myX: 2016,\n    myY: 4.72\n  }\n];"}],"componentModules":[],"dek":"A simple line and area chart.\n"}