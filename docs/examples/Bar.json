{"main":{"title":"main.js","contents":"import LayerCake from 'layercake';\nimport { scaleBand } from 'd3-scale';\nimport groups from './data/groups.js';\nimport Bar from './components/Bar.html';\nimport AxisX from './components/AxisX.html';\nimport AxisY from './components/AxisYScaleBand.html';\n\nconst myCake = new LayerCake({\n  padding: { top: 0, right: 20, bottom: 20, left: 30 },\n  x: 'value',\n  y: 'year',\n  yScale: scaleBand().paddingInner([0.05]).round(true),\n  yDomain: ['1979', '1980', '1981', '1982', '1983'],\n  xDomain: [0, null],\n  data: groups,\n  target: document.getElementById('my-chart')\n})\n  .svgLayers([\n    { component: AxisX, opts: { gridlines: true, baseline: true, snapTicks: true } },\n    { component: AxisY, opts: { gridlines: false, ticks: 3 } },\n    { component: Bar, opts: {} }\n  ]);\n\nmyCake.render();"},"htmlExtras":"","components":[{"title":"./components/Bar.html","contents":"{#each $data as d, i}\n  <rect class='group-rect' data-id=\"{i}\" x=\"{$xScale.range()[0]}\" y=\"{y(d)}\" {height} width=\"{width(d)}\"></rect>\n{/each}\n<style>\n  .group-rect {\n    fill: #00bbff;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    y: ({ $yGet }) => {\n      return (d) => {\n        return $yGet(d);\n      };\n    },\n    height: ({ $yScale }) => {\n      return $yScale.bandwidth();\n    },\n    width: ({ $xGet }) => {\n      return (d) => {\n        return $xGet(d);\n      };\n    }\n  }\n};\n</script>"},{"title":"./components/AxisX.html","contents":"<g class='axis x-axis'>\n  {#each ticks as tick, i}\n    <g class='tick tick-{ tick }' transform='translate({$xScale(tick)},{$yScale.range()[0]})'>\n      {#if opts.gridlines !== false}\n        <line y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n      {/if}\n      <text y='16' text-anchor='{textAnchor(i)}'>{opts.formatTick ? opts.formatTick(tick) : tick}</text>\n    </g>\n  {/each}\n  {#if opts.baseline === true}\n    <line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n  {/if}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  line,\n  .tick line {\n    stroke: #aaa;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #666;\n  }\n\n  .baseline {\n    stroke-dasharray: 0;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    ticks: ({ $xScale, opts }) => {\n      return $xScale.ticks(opts.tickNumber);\n    },\n    textAnchor: ({ ticks, opts }) => {\n      return function (i) {\n        if (opts.snapTicks === true) {\n          if (i === 0) {\n            return 'start';\n          }\n          if (i === ticks.length - 1) {\n            return 'end';\n          }\n        }\n        return 'middle';\n      };\n    }\n  }\n};\n</script>"},{"title":"./components/AxisYScaleBand.html","contents":"<g class='axis y-axis'>\n  {#each $yScale.domain() as tick}\n    <g class='tick tick-{ tick }' transform='translate({$xScale.range()[0]}, {$yScale(tick)})'>\n      {#if opts.gridlines !== false}\n        <line y1='{$width * -1}' y2='0' x1='0' x2='0'></line>\n      {/if}\n      <text y='{4 + ($yScale.bandwidth() / 2)}' x=\"-5\">{opts.formatTick ? opts.formatTick(tick) : tick}</text>\n    </g>\n  {/each}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #aaa;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #666;\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }\n\n  .y-axis .tick text {\n    text-anchor: end;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg'\n};\n</script>"}],"modules":[{"title":"./data/groups.js","contents":"export default [\n  {\n    year: '1979',\n    value: 2\n  },\n  {\n    year: '1980',\n    value: 3\n  },\n  {\n    year: '1981',\n    value: 5\n  },\n  {\n    year: '1982',\n    value: 8\n  },\n  {\n    year: '1983',\n    value: 18\n  }\n];"}],"componentModules":[],"dek":"Since we want an ordinal y-axis and Layer Cake defaults to a linear scale, pass in a custom scale to `yScale` with a few formatting options. Set the x-scale to always start at `0` so you don't show misleading differences between groups.\n"}